<?php

/**
 * @file
 * This is the main code file for the Mass Contact module.
 *
 * This module enables users to send messages (contact) to multiple users
 * through selected roles.
 */

/* ************************************************
 *
 * Functions for implementing various Drupal hooks.
 *
 * ***********************************************/

/**
 * Implements hook_help().
 */
function mass_contact_help($path, $arg) {
  $output = '';

  switch ($path) {
    case 'admin/help#mass_contact':
      $output .= '<h3>' . t('Related tasks:') . '</h3><ul>' .
        '<li>' . l(t('Configure the module'), 'admin/config/system/mass_contact/settings') . '</li>' .
        '<li>' . l(t('Add new category'), 'admin/config/system/mass_contact/add') . '</li>' .
        '<li>' . l(t('List current categories'), 'admin/config/system/mass_contact') . '</li>' .
        '<li>' . l(t('Set permissions'), 'admin/user/permissions', array('fragment' => 'module-mass_contact')) . '</li>' .
        '<li>' . l(t('Send a mass e-mail message'), 'mass_contact') . '</li></ul>';

      $output .= '<h3>' . t('Configuration and setup') . '</h3>';
      $output .= '<p>' . t('While an attempt has been made at setting sensible defaults, the configuration should be reviewed and tweaked before sending any messages.') . '</p>';
      $output .= '<p>' . t('Before sending any mass e-mails, at least one category needs to be created, which can be done at the same location where the administrative settings are. ') . '</p>';
      $output .= '<p>' . t("By default, the e-mails are sent as plain text. If the Mime Mail module is enabled, the e-mails may be sent as HTML and may include one or more binary file attachments (if permitted by admin).") . '</p>';

      $output .= '<h3>' . t('Miscelaneous information') . '</h3>';
      $output .= '<p>' . t("This module works by sending a single e-mail to your mail server with all of the recipients' e-mail addresses in either the 'To:' or 'Bcc:' field. The mail server is then responsible for parsing out the recipients' addresses and forwarding the message along to everyone.") . '</p>';
      $output .= '<p>' . t("When using the Bcc option, recipients are not potentially left open to abuse due to their e-mail addresses being visible to all other recipients.") . '</p>';

      $output .= '<h3>' . t('Menu structure') . '</h3>';
      $output .= '<p>' . t('Here is a description of the menu items and links Mass Contact provides:') . '</p>';
      $output .= '<table><thead>';
      $output .= '<tr><th>' . t('URL') . '</th><th>' . t('Label') . '</th><th>' . t('Description') . '</th><th>' . t('To have access to this URL, users must have this permission') . '</th></tr></thead>';
      $output .= '<tbody><tr><td>' . t('/admin/config/system/mass_contact') . '</td><td>' . t('Mass Contact') . '</td><td>' . t('The main administrative interface, which defaults to the Category listing page.') . '</td><td>' . t('administer mass contact') . '</td></tr>';
      $output .= '<tr><td>' . t('/admin/config/system/mass_contact/list') . '</td><td>' . t('Category list') . '</td><td>' . t('List the currently defined categories.') . '</td><td>' . t('administer mass contact') . '</td></tr>';
      $output .= '<tr><td>' . t('/admin/config/system/mass_contact/add') . '</td><td>' . t('Add category') . '</td><td>' . t('Add a new category.') . '</td><td>' . t('administer mass contact') . '</td></tr>';
      $output .= '<tr><td>' . t('/admin/config/system/mass_contact/edit/$category_id') . '</td><td>' . t("Edit Mass Contact category (the 'edit' operation in the Category list)") . '</td><td>' . t('Edit an existing category') . '</td><td>' . t('administer mass contact') . '</td></tr>';
      $output .= '<tr><td>' . t('/admin/config/system/mass_contact/delete/$category_id') . '</td><td>' . t("Delete Mass Contact category (the 'delete' operation in the Category list)") . '</td><td>' . t('Delete an existing category.') . '</td><td>' . t('administer mass contact') . '</td></tr>';
      $output .= '<tr><td>' . t('/admin/config/system/mass_contact/settings') . '</td><td>' . t('Settings') . '</td><td>' . t('Administrative settings to modify how Mass Contact operates. There are three sub pages under this one: Miscellaneous, Message header and Message body.') . '</td><td>' . t('administer mass contact') . '</td></tr>';
      $output .= '<tr><td>' . t('/mass_contact') . '</td><td>' . t('Mass Contact') . '</td><td>' . t('The main Mass Contact form for sending messages.') . '</td><td>' . t('send mass contact e-mails') . '</td></tr>';
      $output .= '<tr><td>' . t('/node/add/mass_contact') . '</td><td>' . t('Mass Contact') . '</td><td>' . t('The add content page for adding a Mass Contact content item. This is not really useful on its own.') . '</td><td>' . t('create mass_contact content') . '</td></tr>';
      $output .= '</tbody></table>';

      $output .= '<h3>' . t('Troubleshooting') . '</h3>';
      $output .= '<p>' . t('Verify the permission set correctly.') . '</p>';
      $output .= '<p>' . t('When sending messages as Bcc (hiding the recipients from each other) and breaking up a large recipient list into smaller chunks or sending to multiple categories while retaining the category name in the subject, keep in mind that the sender will receive a copy of the message for every group of recipients the list is broken up into. That is normal behavior and cannot be changed.') . '</p>';
      $output .= '<p>' . t('If your category permissions are not showing up correctly, check your category name and make sure you do not have any stray characters or any characters that Drupal does not allow.') . '</p>';
      $output .= '<p>' . t('If you experience "return-path" errors when sending e-mail, you can try the !returnpath module to see if that solves your problem.', array('!returnpath' => l('Return-Path', 'http://drupal.org/project/returnpath'))) . '</p>';
      if (user_access('view site reports')) {
        $drupal_logs = t("Drupal's !logs in the !reports.", array('!logs' => l('log messages', 'admin/reports/dblog'), '!reports' => l('Reports section', 'admin/reports')));
      }
      else {
        $drupal_logs = t("Drupal's log messages in the Reports section.");
      }
      $output .= '<p>' . t("If PHP's mail() function encounters an error, it just returns FALSE and Drupal presents a message like this: 'Unable to send e-mail. Contact the site administrator if the problem persists.'
                            To find what the cause of the error is, you may need to reference a number of logs:") .
                            '<ul><li>' . $drupal_logs . '</li>' .
                            '<li>' . t("The host server's system logs. For most Linux systems, the log files are usually stored in /var/log. The system messages are usually stored in /var/log/messages or /var/log/syslog.") . '</li>' .
                            '<li>' . t("The HTTP server software's logs. For Apache on Linux, it's log files are usually found in /var/log/httpd, /var/log/apache or /var/log/apache2.") . '</li>' .
                            '<li>' . t("The mail server software's logs. Most mail servers store thier logs in /var/log/mail*, where 'mail*' might be a directory or it might be a number of files in /var/log, including (but not limited to) mail.log, mail.info, mail.warn and mail.err.") . '</li></ul></p>';
      $output .= '<p>' . t('If you are also using other mail related modules on your Drupal installation (i.e.: !htmlmail module, !mimemail module, !phpmailer module, !smtp module, etc.), be sure to check the issue queues for those modules for solutions, as well.', array('!htmlmail' => l('HTML Mail', 'http://drupal.org/project/htmlmail'), '!mimemail' => l('Mime Mail', 'http://drupal.org/project/mimemail'), '!phpmailer' => l('PHPMailer', 'http://drupal.org/project/phpmailer'), '!smtp' => l('SMTP Authentication Support', 'http://drupal.org/project/smtp'))) . '</p>';

      return ($output);
  }
} // End of mass_contact_help().


/**
 * Implements hook_permission().
 */
function mass_contact_permission() {
  $permissions = array(
    'administer mass contact' => array(
      'title' => t('Administer mass contact'),
      'description' => t('This permission sets whether the user is allowed to modify the categories and configuration settings of Mass Contact.'),
    ),
    'send mass contact e-mails' => array(
      'title' => t('Send messages with Mass Contact'),
      'description' => t('This permission sets whether the user is allowed to send messages with the Mass Contact.'),
    ),
    'send mass contact attachments' => array(
      'title' => t('Attach files to outgoing messages'),
      'description' => t('This permission sets whether the sender of the message is allowed to include attachments with the message.'),
    ),
    'choose whether to archive mass contact messages' => array(
      'title' => t('Archive messages as content'),
      'description' => t('This permission sets whether the sender of the message is allowed to save an archive copy of the message as a node.'),
    ),
  );

  $result = db_select('mass_contact', 'mc')
    ->fields('mc', array('category'))
    ->execute();
  if (!empty($result)) {
    foreach ($result as $category) {
      $permission = 'send to users in the ' . $category->category . ' category';
      $permissions[$permission] = array(
        'title' => t('Send to users in the @category category', array('@category' => $category->category)),
        'description' => t('Allows the user to send messages to the users in the @category category', array('@category' => $category->category)),
      );
    }
  }

  return $permissions;
} // End of mass_contact_permission().


/**
 * Implements hook_menu().
 */
function mass_contact_menu() {
  $items = array();
  $items['admin/config/system/mass_contact'] = array(
    'title' => 'Mass Contact',
    'page callback' => 'mass_contact_admin_categories',
    'access arguments' => array('administer mass contact'),
    'description' => 'Configure Mass Contact and set up categories of people to send mail to.',
    'file' => 'mass_contact.admin.inc',
  );
  $items['admin/config/system/mass_contact/list'] = array(
    'title' => 'Category list',
    'page callback' => 'mass_contact_admin_categories',
    'access arguments' => array('administer mass contact'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'description' => 'A listing of all existing categories.',
    'file' => 'mass_contact.admin.inc',
  );
  $items['admin/config/system/mass_contact/add'] = array(
    'title' => 'Add category',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mass_contact_admin_edit'),
    'access arguments' => array('administer mass contact'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
    'description' => 'Add a new category.',
    'file' => 'mass_contact.admin.inc',
  );
  $items['admin/config/system/mass_contact/edit'] = array(
    'title' => 'Edit Mass Contact category',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mass_contact_admin_edit'),
    'access arguments' => array('administer mass contact'),
    'type' => MENU_CALLBACK,
    'description' => 'Modify an existing category.',
    'file' => 'mass_contact.admin.inc',
  );
  $items['admin/config/system/mass_contact/delete'] = array(
    'title' => 'Delete Mass Contact category',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mass_contact_admin_delete'),
    'access arguments' => array('administer mass contact'),
    'type' => MENU_CALLBACK,
    'description' => 'Remove an existing category.',
    'file' => 'mass_contact.admin.inc',
  );
  $items['admin/config/system/mass_contact/settings'] = array(
    'title' => 'Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mass_contact_admin_settings_misc'),
    'access arguments' => array('administer mass contact'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
    'description' => 'Configuration options for Mass Contact.',
    'file' => 'mass_contact.admin.inc',
  );
  $items['admin/config/system/mass_contact/settings/misc'] = array(
    'title' => 'Miscellaneous',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mass_contact_admin_settings_misc'),
    'access arguments' => array('administer mass contact'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'description' => 'Miscellaneous configuration options for Mass Contact.',
    'file' => 'mass_contact.admin.inc',
  );
  $items['admin/config/system/mass_contact/settings/header'] = array(
    'title' => 'Message header',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mass_contact_admin_settings_header'),
    'access arguments' => array('administer mass contact'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
    'description' => 'Configuration options for the headers of the messages to be sent.',
    'file' => 'mass_contact.admin.inc',
  );
  $items['admin/config/system/mass_contact/settings/body'] = array(
    'title' => 'Message body',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mass_contact_admin_settings_body'),
    'access arguments' => array('administer mass contact'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
    'description' => 'Configuration options for the bodies of the messages to be sent.',
    'file' => 'mass_contact.admin.inc',
  );
  $items['mass_contact'] = array(
    'title' => 'Mass Contact',
    'page callback' => 'mass_contact_site_page',
    'access arguments' => array('send mass contact e-mails'),
    'description' => 'Send an e-mail message to multiple users of this website.',
    'file' => 'mass_contact.page.inc',
  );
  return $items;
} // End of mass_contact_menu().


/**
 * Implements hook_menu_alter().
 */
function mass_contact_menu_alter(&$items) {
  if (!empty($items['node/add/mass-contact'])) {
    $items['node/add/mass-contact']['access callback'] = FALSE;
  }
} // End of mass_contact_menu_alter().


/**
 * Implements hook_user_presave().
 */
function mass_contact_user_presave(&$edit, $account, $category) {
//dpm($edit); dpm($account); dpm($category);
  $edit['data']['mass_contact_optout'] = isset($edit['mass_contact_optout']) ? $edit['mass_contact_optout'] : '';

//  return array('mass_contact_optout' => $edit['mass_contact_optout']);
} // End of mass_contact_user_presave().


/**
 * Implements hook_form_alter() for the user_profile_form.
 */
function mass_contact_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#user_category'] == 'account') {
    if (variable_get('mass_contact_optout_d', 0) == 1) {
      $account = $form['#user'];

      $form['mass_contact'] = array(
        '#type' => 'fieldset',
        '#title' => t('Mass contact settings'),
        '#weight' => 5,
        '#collapsible' => TRUE,
      );
      $form['mass_contact']['mass_contact_optout'] = array(
        '#type' => 'checkbox',
        '#title' => t('Opt-out of mass e-mails'),
        '#default_value' => !empty($account->data['mass_contact_optout']) ? $account->data['mass_contact_optout'] : 0,
        '#description' => variable_get('mass_contact_optout_message', t('Allows you to opt-out of receiving mass e-mails from privileged users. Note that site administrators are able to include you in mass e-mails even if you choose not to enable this feature, and the ability to opt-out may be removed by the administrator at any time.')),
      );
    }
    elseif (variable_get('mass_contact_optout_d', 0) == 2) {
      // Initialize the variables we're going to use.
      $account = $form['#user'];
      $users_roles = array();
      $user_role = 0;
      $included_categories = array();

      // Start with the 'authenticated user' role, as it's not in the database.
      $users_roles[] = 2;
      // Get all the roles this user is a memeber of.
      $user_roles = db_select('users_roles', 'ur')
        ->fields('ur', array('rid'))
        ->condition('uid', $account->uid)
        ->execute();
      // Put them into an array for later reference.
      foreach ($user_roles as $user_role) {
        $users_roles[] = $user_role->rid;
      }

      // Get all Mass Contact categories.
      $categories = db_select('mass_contact', 'mc')
        ->fields('mc', array('cid', 'category', 'recipients'))
        ->execute();
      // Iterate through each category.
      foreach ($categories as $category) {
        // Pull out the roles that are a part of this category.
        foreach (explode(',', $category->recipients) as $role_id) {
          // If the category's role is one the user is part of, show the category.
          if (in_array($role_id, $users_roles)) {
            $included_categories[$category->cid] = $category->category;
          }
        }
      }

      if ($included_categories) {
        $form['mass_contact'] = array(
          '#type' => 'fieldset',
          '#title' => t('Mass contact settings'),
          '#weight' => 5,
          '#collapsible' => TRUE,
          '#description' => variable_get('mass_contact_optout_message', t('Allows you to opt-out of receiving mass e-mails from privileged users. Note that site administrators are able to include you in mass e-mails even if you choose not to enable this feature, and the ability to opt-out may be removed by the administrator at any time.')),
        );

        foreach ($included_categories as $category_cid => $category_category) {
          // If the category's role is one the user is part of, show the category.
          $form['mass_contact']['mass_contact_optout_' . $category_cid] = array(
            '#type' => 'checkbox',
            '#title' => t('Opt-out of mass e-mails to the %category category.', array('%category' => $category_category)),
            '#default_value' => !empty($account->data['mass_contact_optout_' . $category_cid]) ? $account->data['mass_contact_optout_' . $category_cid] : 0,
          );
        }
      }
    }
  }
} // End of mass_contact_form_user_profile_form_alter().


/**
 * Implements hook_node_delete().
 * /
function mass_contact_node_delete($node) {
  if ($node->type == 'mass_contact') {
    // Look for the key phrase in the node body. If it exists, then there is
    // an attachment that needs to be deleted.
dpm($node);
$test_node = node_load(14);
dpm($test_node);
    $offset1 = strpos($node->body, '<hr>Attachment:<br />');
    if ($offset1) {
      // Using the saved attachment path, find the file name.
      $file_location = variable_get('mass_contact_attachment_location', file_directory_path() . '/mass_contact_attachments');
      $file_location_start = strpos($node->body, $file_location, $offset1);
      if ($file_location_start) {
        // Get the attachment file name.
        $file_location_end = strpos($node->body, '">', $file_location_start);
        $file_path_name = drupal_substr($node->body, $file_location_start, $file_location_end - $file_location_start);

        if (file_exists($file_path_name)) {
          if (!file_delete($file_path_name)) {
            // Log an error.
            watchdog('mass_contact', 'There was an error deleting the attachment.', WATCHDOG_ERROR);
          }
        }
        else {
          // Log an error.
          watchdog('mass_contact', 'There was an indication of an attachment within the node body, but the attachment was not found. If the attachment is still there, it was NOT deleted.', WATCHDOG_WARNING);
        }
      }
      else {
        // Log an error.
        watchdog('mass_contact', 'There was an indication of an attachment within the node body, but the attachment path was not found. If the attachment is still there, it was NOT deleted.', WATCHDOG_WARNING);
      }
    }
  }
} // End of mass_contact_node_delete().
*/


/**
 * Implements hook_mail().
 */
function mass_contact_mail($key, &$message, $params) {
//dpm($key); dpm($message); dpm($params);
  if (!empty($params['headers'])) {
    foreach ($params['headers'] as $key => $value) {
      $message['headers'][$key] = $params['headers'][$key];
    }
  }
  $message['subject'] = $params['subject'];
  $message['body'] = $params['body'];
//dpm($key); dpm($message); dpm($params);
} // End of mass_contact_mail().
